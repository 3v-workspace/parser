# Generated by Django 2.0.9 on 2019-03-11 16:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('eservice', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='eservicestar',
            name='created_by',
            field=models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eservicestar',
            name='eservice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='eservice.EService'),
        ),
        migrations.AddField(
            model_name='eserviceonapproving',
            name='assign_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eserviceonapproving',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_approver_item_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eserviceonapproving',
            name='eservice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eservice.EService'),
        ),
        migrations.AddField(
            model_name='eservicemeta',
            name='eservice_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='eservice.EServiceType'),
        ),
        migrations.AddField(
            model_name='eservicemeta',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='eservice.EServiceMeta', verbose_name='Батьківська категорія'),
        ),
        migrations.AddField(
            model_name='eservicelog',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eservicelog',
            name='eservice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eservice.EService'),
        ),
        migrations.AddField(
            model_name='eservicefile',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eservicefile',
            name='eservice',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='eservice.EService', verbose_name='Послуга'),
        ),
        migrations.AddField(
            model_name='eservice',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор картки'),
        ),
        migrations.AddField(
            model_name='eservice',
            name='resolutioner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolutioner', to=settings.AUTH_USER_MODEL, verbose_name='Накладає резолюцію'),
        ),
        migrations.AddField(
            model_name='eservice',
            name='status',
            field=models.ForeignKey(default=6, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='eservice.EServiceMeta', verbose_name='Стан послуги'),
        ),
        migrations.AddField(
            model_name='eservice',
            name='type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='eservice.EServiceType', verbose_name='Тип послуги'),
        ),
        migrations.AlterUniqueTogether(
            name='eserviceonapproving',
            unique_together={('eservice', 'assign_to')},
        ),
        migrations.AlterUniqueTogether(
            name='eservice',
            unique_together={('internal_id', 'id')},
        ),
    ]
